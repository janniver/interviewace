{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function cmp(a, b) {\n    return a.line - b.line || a.ch - b.ch;\n  }\n  var nameStartChar = \"A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n  var nameChar = nameStartChar + \"\\-\\:\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n  var xmlTagStart = new RegExp(\"<(/?)([\" + nameStartChar + \"][\" + nameChar + \"]*)\", \"g\");\n  function Iter(cm, line, ch, range) {\n    this.line = line;\n    this.ch = ch;\n    this.cm = cm;\n    this.text = cm.getLine(line);\n    this.min = range ? Math.max(range.from, cm.firstLine()) : cm.firstLine();\n    this.max = range ? Math.min(range.to - 1, cm.lastLine()) : cm.lastLine();\n  }\n  function tagAt(iter, ch) {\n    var type = iter.cm.getTokenTypeAt(Pos(iter.line, ch));\n    return type && /\\btag\\b/.test(type);\n  }\n  function nextLine(iter) {\n    if (iter.line >= iter.max) return;\n    iter.ch = 0;\n    iter.text = iter.cm.getLine(++iter.line);\n    return true;\n  }\n  function prevLine(iter) {\n    if (iter.line <= iter.min) return;\n    iter.text = iter.cm.getLine(--iter.line);\n    iter.ch = iter.text.length;\n    return true;\n  }\n  function toTagEnd(iter) {\n    for (;;) {\n      var gt = iter.text.indexOf(\">\", iter.ch);\n      if (gt == -1) {\n        if (nextLine(iter)) continue;else return;\n      }\n      if (!tagAt(iter, gt + 1)) {\n        iter.ch = gt + 1;\n        continue;\n      }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n  function toTagStart(iter) {\n    for (;;) {\n      var lt = iter.ch ? iter.text.lastIndexOf(\"<\", iter.ch - 1) : -1;\n      if (lt == -1) {\n        if (prevLine(iter)) continue;else return;\n      }\n      if (!tagAt(iter, lt + 1)) {\n        iter.ch = lt;\n        continue;\n      }\n      xmlTagStart.lastIndex = lt;\n      iter.ch = lt;\n      var match = xmlTagStart.exec(iter.text);\n      if (match && match.index == lt) return match;\n    }\n  }\n  function toNextTag(iter) {\n    for (;;) {\n      xmlTagStart.lastIndex = iter.ch;\n      var found = xmlTagStart.exec(iter.text);\n      if (!found) {\n        if (nextLine(iter)) continue;else return;\n      }\n      if (!tagAt(iter, found.index + 1)) {\n        iter.ch = found.index + 1;\n        continue;\n      }\n      iter.ch = found.index + found[0].length;\n      return found;\n    }\n  }\n  function toPrevTag(iter) {\n    for (;;) {\n      var gt = iter.ch ? iter.text.lastIndexOf(\">\", iter.ch - 1) : -1;\n      if (gt == -1) {\n        if (prevLine(iter)) continue;else return;\n      }\n      if (!tagAt(iter, gt + 1)) {\n        iter.ch = gt;\n        continue;\n      }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n  function findMatchingClose(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var next = toNextTag(iter),\n        end,\n        startLine = iter.line,\n        startCh = iter.ch - (next ? next[0].length : 0);\n      if (!next || !(end = toTagEnd(iter))) return;\n      if (end == \"selfClose\") continue;\n      if (next[1]) {\n        // closing tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == next[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == next[2])) return {\n          tag: next[2],\n          from: Pos(startLine, startCh),\n          to: Pos(iter.line, iter.ch)\n        };\n      } else {\n        // opening tag\n        stack.push(next[2]);\n      }\n    }\n  }\n  function findMatchingOpen(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var prev = toPrevTag(iter);\n      if (!prev) return;\n      if (prev == \"selfClose\") {\n        toTagStart(iter);\n        continue;\n      }\n      var endLine = iter.line,\n        endCh = iter.ch;\n      var start = toTagStart(iter);\n      if (!start) return;\n      if (start[1]) {\n        // closing tag\n        stack.push(start[2]);\n      } else {\n        // opening tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == start[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == start[2])) return {\n          tag: start[2],\n          from: Pos(iter.line, iter.ch),\n          to: Pos(endLine, endCh)\n        };\n      }\n    }\n  }\n  CodeMirror.registerHelper(\"fold\", \"xml\", function (cm, start) {\n    var iter = new Iter(cm, start.line, 0);\n    for (;;) {\n      var openTag = toNextTag(iter);\n      if (!openTag || iter.line != start.line) return;\n      var end = toTagEnd(iter);\n      if (!end) return;\n      if (!openTag[1] && end != \"selfClose\") {\n        var startPos = Pos(iter.line, iter.ch);\n        var endPos = findMatchingClose(iter, openTag[2]);\n        return endPos && cmp(endPos.from, startPos) > 0 ? {\n          from: startPos,\n          to: endPos.from\n        } : null;\n      }\n    }\n  });\n  CodeMirror.findMatchingTag = function (cm, pos, range) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    if (iter.text.indexOf(\">\") == -1 && iter.text.indexOf(\"<\") == -1) return;\n    var end = toTagEnd(iter),\n      to = end && Pos(iter.line, iter.ch);\n    var start = end && toTagStart(iter);\n    if (!end || !start || cmp(iter, pos) > 0) return;\n    var here = {\n      from: Pos(iter.line, iter.ch),\n      to: to,\n      tag: start[2]\n    };\n    if (end == \"selfClose\") return {\n      open: here,\n      close: null,\n      at: \"open\"\n    };\n    if (start[1]) {\n      // closing tag\n      return {\n        open: findMatchingOpen(iter, start[2]),\n        close: here,\n        at: \"close\"\n      };\n    } else {\n      // opening tag\n      iter = new Iter(cm, to.line, to.ch, range);\n      return {\n        open: here,\n        close: findMatchingClose(iter, start[2]),\n        at: \"open\"\n      };\n    }\n  };\n  CodeMirror.findEnclosingTag = function (cm, pos, range, tag) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    for (;;) {\n      var open = findMatchingOpen(iter, tag);\n      if (!open) break;\n      var forward = new Iter(cm, pos.line, pos.ch, range);\n      var close = findMatchingClose(forward, open.tag);\n      if (close) return {\n        open: open,\n        close: close\n      };\n    }\n  };\n\n  // Used by addon/edit/closetag.js\n  CodeMirror.scanForClosingTag = function (cm, pos, name, end) {\n    var iter = new Iter(cm, pos.line, pos.ch, end ? {\n      from: 0,\n      to: end\n    } : null);\n    return findMatchingClose(iter, name);\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","cmp","a","b","line","ch","nameStartChar","nameChar","xmlTagStart","RegExp","Iter","cm","range","text","getLine","min","Math","max","from","firstLine","to","lastLine","tagAt","iter","type","getTokenTypeAt","test","nextLine","prevLine","length","toTagEnd","gt","indexOf","lastSlash","lastIndexOf","selfClose","slice","toTagStart","lt","lastIndex","match","exec","index","toNextTag","found","toPrevTag","findMatchingClose","tag","stack","next","end","startLine","startCh","i","push","findMatchingOpen","prev","endLine","endCh","start","registerHelper","openTag","startPos","endPos","findMatchingTag","pos","here","open","close","at","findEnclosingTag","forward","scanForClosingTag","name"],"sources":["/Users/kailashgautham/Documents/GitHub/hackandroll/code_editor/node_modules/codemirror/addon/fold/xml-fold.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function cmp(a, b) { return a.line - b.line || a.ch - b.ch; }\n\n  var nameStartChar = \"A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n  var nameChar = nameStartChar + \"\\-\\:\\.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n  var xmlTagStart = new RegExp(\"<(/?)([\" + nameStartChar + \"][\" + nameChar + \"]*)\", \"g\");\n\n  function Iter(cm, line, ch, range) {\n    this.line = line; this.ch = ch;\n    this.cm = cm; this.text = cm.getLine(line);\n    this.min = range ? Math.max(range.from, cm.firstLine()) : cm.firstLine();\n    this.max = range ? Math.min(range.to - 1, cm.lastLine()) : cm.lastLine();\n  }\n\n  function tagAt(iter, ch) {\n    var type = iter.cm.getTokenTypeAt(Pos(iter.line, ch));\n    return type && /\\btag\\b/.test(type);\n  }\n\n  function nextLine(iter) {\n    if (iter.line >= iter.max) return;\n    iter.ch = 0;\n    iter.text = iter.cm.getLine(++iter.line);\n    return true;\n  }\n  function prevLine(iter) {\n    if (iter.line <= iter.min) return;\n    iter.text = iter.cm.getLine(--iter.line);\n    iter.ch = iter.text.length;\n    return true;\n  }\n\n  function toTagEnd(iter) {\n    for (;;) {\n      var gt = iter.text.indexOf(\">\", iter.ch);\n      if (gt == -1) { if (nextLine(iter)) continue; else return; }\n      if (!tagAt(iter, gt + 1)) { iter.ch = gt + 1; continue; }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n  function toTagStart(iter) {\n    for (;;) {\n      var lt = iter.ch ? iter.text.lastIndexOf(\"<\", iter.ch - 1) : -1;\n      if (lt == -1) { if (prevLine(iter)) continue; else return; }\n      if (!tagAt(iter, lt + 1)) { iter.ch = lt; continue; }\n      xmlTagStart.lastIndex = lt;\n      iter.ch = lt;\n      var match = xmlTagStart.exec(iter.text);\n      if (match && match.index == lt) return match;\n    }\n  }\n\n  function toNextTag(iter) {\n    for (;;) {\n      xmlTagStart.lastIndex = iter.ch;\n      var found = xmlTagStart.exec(iter.text);\n      if (!found) { if (nextLine(iter)) continue; else return; }\n      if (!tagAt(iter, found.index + 1)) { iter.ch = found.index + 1; continue; }\n      iter.ch = found.index + found[0].length;\n      return found;\n    }\n  }\n  function toPrevTag(iter) {\n    for (;;) {\n      var gt = iter.ch ? iter.text.lastIndexOf(\">\", iter.ch - 1) : -1;\n      if (gt == -1) { if (prevLine(iter)) continue; else return; }\n      if (!tagAt(iter, gt + 1)) { iter.ch = gt; continue; }\n      var lastSlash = iter.text.lastIndexOf(\"/\", gt);\n      var selfClose = lastSlash > -1 && !/\\S/.test(iter.text.slice(lastSlash + 1, gt));\n      iter.ch = gt + 1;\n      return selfClose ? \"selfClose\" : \"regular\";\n    }\n  }\n\n  function findMatchingClose(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var next = toNextTag(iter), end, startLine = iter.line, startCh = iter.ch - (next ? next[0].length : 0);\n      if (!next || !(end = toTagEnd(iter))) return;\n      if (end == \"selfClose\") continue;\n      if (next[1]) { // closing tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == next[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == next[2])) return {\n          tag: next[2],\n          from: Pos(startLine, startCh),\n          to: Pos(iter.line, iter.ch)\n        };\n      } else { // opening tag\n        stack.push(next[2]);\n      }\n    }\n  }\n  function findMatchingOpen(iter, tag) {\n    var stack = [];\n    for (;;) {\n      var prev = toPrevTag(iter);\n      if (!prev) return;\n      if (prev == \"selfClose\") { toTagStart(iter); continue; }\n      var endLine = iter.line, endCh = iter.ch;\n      var start = toTagStart(iter);\n      if (!start) return;\n      if (start[1]) { // closing tag\n        stack.push(start[2]);\n      } else { // opening tag\n        for (var i = stack.length - 1; i >= 0; --i) if (stack[i] == start[2]) {\n          stack.length = i;\n          break;\n        }\n        if (i < 0 && (!tag || tag == start[2])) return {\n          tag: start[2],\n          from: Pos(iter.line, iter.ch),\n          to: Pos(endLine, endCh)\n        };\n      }\n    }\n  }\n\n  CodeMirror.registerHelper(\"fold\", \"xml\", function(cm, start) {\n    var iter = new Iter(cm, start.line, 0);\n    for (;;) {\n      var openTag = toNextTag(iter)\n      if (!openTag || iter.line != start.line) return\n      var end = toTagEnd(iter)\n      if (!end) return\n      if (!openTag[1] && end != \"selfClose\") {\n        var startPos = Pos(iter.line, iter.ch);\n        var endPos = findMatchingClose(iter, openTag[2]);\n        return endPos && cmp(endPos.from, startPos) > 0 ? {from: startPos, to: endPos.from} : null\n      }\n    }\n  });\n  CodeMirror.findMatchingTag = function(cm, pos, range) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    if (iter.text.indexOf(\">\") == -1 && iter.text.indexOf(\"<\") == -1) return;\n    var end = toTagEnd(iter), to = end && Pos(iter.line, iter.ch);\n    var start = end && toTagStart(iter);\n    if (!end || !start || cmp(iter, pos) > 0) return;\n    var here = {from: Pos(iter.line, iter.ch), to: to, tag: start[2]};\n    if (end == \"selfClose\") return {open: here, close: null, at: \"open\"};\n\n    if (start[1]) { // closing tag\n      return {open: findMatchingOpen(iter, start[2]), close: here, at: \"close\"};\n    } else { // opening tag\n      iter = new Iter(cm, to.line, to.ch, range);\n      return {open: here, close: findMatchingClose(iter, start[2]), at: \"open\"};\n    }\n  };\n\n  CodeMirror.findEnclosingTag = function(cm, pos, range, tag) {\n    var iter = new Iter(cm, pos.line, pos.ch, range);\n    for (;;) {\n      var open = findMatchingOpen(iter, tag);\n      if (!open) break;\n      var forward = new Iter(cm, pos.line, pos.ch, range);\n      var close = findMatchingClose(forward, open.tag);\n      if (close) return {open: open, close: close};\n    }\n  };\n\n  // Used by addon/edit/closetag.js\n  CodeMirror.scanForClosingTag = function(cm, pos, name, end) {\n    var iter = new Iter(cm, pos.line, pos.ch, end ? {from: 0, to: end} : null);\n    return findMatchingClose(iter, name);\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}